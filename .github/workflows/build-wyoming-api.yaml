name: Build and Push Wyoming API Client Image

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build-wyoming-api.yaml'
  schedule:
    # Rebuild weekly to get latest updates
    - cron: '0 0 * * 0'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mikesmitty/ser-wyoming-whisper-api-client

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout ser/wyoming-whisper-api-client
        uses: actions/checkout@v5
        with:
          repository: ser/wyoming-whisper-api-client
          path: ../wyoming-api

      - name: Get commit SHA
        working-directory: ../wyoming-api
        run: |
          echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,prefix={{branch}}-
            type=raw,value={{date 'YYYYMMDD'}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ../wyoming-api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Output image details
        run: |
          echo "Image built and pushed successfully"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Source commit: ${{ env.COMMIT_SHA }}"
